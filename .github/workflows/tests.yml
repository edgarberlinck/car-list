name: Build - Test

on:
  workflow_dispatch:
    inputs:
      no-cache:
        description: "Build docker images with no cache"
        default: false
        required: false
        type: boolean
  pull_request:
  push:
    branches:
      - main

env:
  PLAYWRIGHT_BROWSERS_PATH: ${{ github.workspace }}/ms-playwright

jobs:
  docker-build-tests:
    runs-on: ubuntu-latest
    # defaults:
    #   run:
    #     working-directory: ./
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn
          cache-dependency-path: yarn.lock

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install dependencies (yarn)
        run: yarn install --frozen-lockfile

      # - name: Run unit tests
      #   run: yarn test

      - uses: actions/cache@v3
        id: next_build_cache
        with:
          path: |
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-
            ${{ runner.os }}-nextjs-

      - name: Run next build
        run: yarn build

      - uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          tags: carlist
          load: true
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          no-cache: ${{ inputs.no-cache == true }}

      - name: Run Docker
        run: docker run -d -p 3000:3000 carlist

      - name: Get installed Playwright version
        id: playwright-version
        run: echo "version=$(npm show @playwright/test version)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: playwright_browser_cache
        with:
          path: ${{ env.PLAYWRIGHT_BROWSERS_PATH }}
          key: '${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}'

      - name: Install Playwright Browsers
        if: steps.playwright_browser_cache.outputs.cache-hit != 'true'
        run: yarn run playwright install --with-deps

      - name: Run Playwright tests
        run: yarn test-e2e --workers=4
